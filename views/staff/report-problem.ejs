<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN"
      crossorigin="anonymous"
    />
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
      crossorigin="anonymous"
    ></script>
    <link
      rel="stylesheet"
      type="text/css"
      href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css"
    />
    <script
      type="text/javascript"
      src="https://cdn.jsdelivr.net/npm/toastify-js"
    ></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>
        a {
          text-decoration: none;
        }
        html,
        body {
          height: 100vh;
        }
  
        .sidebar {
          background-color: var(--bs-gray-800);
          flex: 0.2;
          height: 100vh;
        }
  
        .sidebar--page.active {
          color: white;
          background-color: var(--bs-gray-700);
        }
  
        .sidebar--page {
          color: rgba(255, 255, 255, 0.5);
          cursor: pointer;
        }
  
        .sidebar--page:hover {
          background-color: var(--bs-gray-700);
        }
      </style>
    <title>Report Problem</title>
</head>
<body>

    <div class="row h-100 d-flex">
        <div class="col-3 flex-grow-1">
         <!-- SIDEBAR -->
         <div class="sidebar p-2 pt-5 h-100">
            <div class="h-100 d-flex flex-column justify-content-between">
              <div>
                <a href="/staff/attendance.html">
                  <div class="sidebar--page my-1 p-2 fs-5 rounded">
                    Attendance
                  </div>
                </a>
                <a href="/staff/new-member.html">
                  <div class="sidebar--page my-1 p-2 fs-5 rounded">New Member</div>
                </a>
                <a href="/staff/renew-plan.html">
                  <div class="sidebar--page my-1 p-2 fs-5 rounded">Renew Plan</div>
                </a>
                <a href="/staff/change-plan.html">
                    <div class="sidebar--page my-1 p-2 fs-5 rounded">Change Plan</div>
                </a>
                <a href="/staff/payment-history.html">
                  <div class="sidebar--page my-1 p-2 fs-5 rounded">Payments History</div>
                </a>
                <a href="/staff/report-problem.html">
                    <div class="sidebar--page my-1 p-2 fs-5 rounded active">Report Problem</div>
                </a>
              </div>
  
              <div class="p-2">
                <button class="btn btn-danger w-100">Sign out</button>
              </div>
            </div>
          </div>
          <!-- SIDEBAR -->
        </div>
        <div class="col-9 flex-grow-1">
            <main class="p-2 pt-5 h-100">
                <h1 class="mb-3">Report Problem</h1>
                <form onsubmit="return reportProblem()" novalidate class="needs-validation">
                    <div class="mb-3">
                        <label for="title" class="form-label">Title</label>
                        <input type="text" name="title" class="form-control" id="title" required>
                        <div class="invalid-feedback">Title is required</div>
                    </div>
                    <div class="mb-3">
                        <label for="description" class="form-label">Description</label>
                        <textarea rows="3" type="text" name="description" class="form-control" id="description" required></textarea>
                        <div class="invalid-feedback">Description is required</div>
                    </div>
                    <div class="mb-3">
                        <label for="user" class="form-label">User ID</label>
                        <input type="text" name="user" class="form-control" id="user" required>
                        <div class="invalid-feedback">User is required</div>
                    </div>
                    <button class="btn btn-primary">Submit</button>
                </form>
            </main>
        </div>
    <script>
      (() => {
        "use strict";

        // Fetch all the forms we want to apply custom Bootstrap validation styles to
        const forms = document.querySelectorAll(".needs-validation");

        // Loop over them and prevent submission
        Array.from(forms).forEach((form) => {
          form.addEventListener(
            "submit",
            (event) => {
              if (!form.checkValidity()) {
                event.preventDefault();
                event.stopPropagation();
              }

              form.classList.add("was-validated");
            },
            false
          );
        });
      })();

        const reportProblem = () => {
            const payload = {
                title: document.getElementById('name').value,
                description: document.getElementById('description').value,
                user: document.getElementById('user').value,
            }

            fetch('/', {
                method: 'POST',
                headers: {
                    'content-type': 'application/json'
                },
                body: JSON.stringify(payload)
            })
            .then(res => {
                if(!res || !res.ok ) throw new Error('Something Went Wrong')
                return res.json();
            })
            .then(body => body.data)
            .then(data => {
                Toastify({
                text: "Problem Created Successfully",
                duration: 3000,
                close: true,
                gravity: "top", // `top` or `bottom`
                position: "center", // `left`, `center` or `right`
                stopOnFocus: false, // Prevents dismissing of toast on hover
                style: {
                  background: "var(--bs-success)",
                },
              }).showToast();
            })
            .catch((err) => {
                Toastify({
                    text: "Something went wrong",
                    duration: 3000,
                    close: true,
                    gravity: "top", // `top` or `bottom`
                    position: "center", // `left`, `center` or `right`
                    stopOnFocus: false,
                    style: {
                    background: "var(--bs-danger)",
                    },
                }).showToast();
                console.log(err);
            });
        }

        const logout = () => {
            fetch('/')
            .then(res => {
                if(!res || !res.ok) throw new Error('Something Went Wrong');
                window.location.reload();
            })
            .catch((err) => {
              Toastify({
                text: "Something went wrong",
                duration: 3000,
                close: true,
                gravity: "top", // `top` or `bottom`
                position: "center", // `left`, `center` or `right`
                stopOnFocus: false,
                style: {
                  background: "var(--bs-danger)",
                },
              }).showToast();
              console.log(err);
            });
        }
    </script>
</body>
</html>