<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN"
      crossorigin="anonymous"
    />
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
      crossorigin="anonymous"
    ></script>
    <link
      rel="stylesheet"
      type="text/css"
      href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css"
    />
    <script
      type="text/javascript"
      src="https://cdn.jsdelivr.net/npm/toastify-js"
    ></script>
    <title>Staff</title>
    <style>
      a {
        text-decoration: none;
      }
      html,
      body {
        height: 100vh;
      }

      .sidebar {
        background-color: var(--bs-gray-800);
        flex: 0.2;
        height: 100vh;
      }

      .sidebar--page.active {
        color: white;
        background-color: var(--bs-gray-700);
      }

      .sidebar--page {
        color: rgba(255, 255, 255, 0.5);
        cursor: pointer;
      }

      .sidebar--page:hover {
        background-color: var(--bs-gray-700);
      }
    </style>
    
  </head>
  <body>
    <div class="row h-100 d-flex">
      <div class="col-3 flex-grow-1">
        <!-- SIDEBAR -->
        <div class="sidebar p-2 pt-5 h-100">
          <a href="/api/v1/admin/dashboard">
            <div class="sidebar--page my-1 p-2 fs-5 rounded">
              Dashboard
            </div>
          </a>
          <a href="/api/v1/admin/sessions">
            <div class="sidebar--page my-1 p-2 fs-5 rounded">Sessions</div>
          </a>
          <a href="/api/v1/admin/plans">
            <div class="sidebar--page my-1 p-2 fs-5 rounded">Plans</div>
          </a>
          <a href="/api/v1/admin/members">
            <div class="sidebar--page my-1 p-2 fs-5 rounded">Members</div>
          </a>
          <a href="/api/v1/admin/staff">
            <div class="sidebar--page active my-1 p-2 fs-5 rounded">Staff</div>
          </a>
          <a href="/api/v1/admin/payments">
            <div class="sidebar--page my-1 p-2 fs-5 rounded">Payments</div>
          </a>
        </div>
        <!-- SIDEBAR -->
      </div>
      <div class="col-9 flex-grow-1">
        <main class="p-2 pt-5 h-100">
          <h2 class="mb-3">Staff</h2>
          <table class="table table-striped table-bordered">
            <thead>
              <tr>
                <th class="col">ID</th>
                <th class="col">First Name</th>
                <th class="col">Last Name</th>
                <th class="col">Username</th>
                <th class="col">email</th>
                <th class="col">Phone Number</th>
                <th class="col">role</th>
                <th class="col">Details</th>
              </tr>
            </thead>
            <tbody>
              <% employees.forEach(staff => { %>
                <tr>
                  <td class="col"><%=staff._id%></td>
                  <td class="col"><%=staff.firstname%></td>
                  <td class="col"><%=staff.lastname%></td>
                  <td class="col"><%=staff.username%></td>
                  <td class="col"><%=staff.email%></td>
                  <td class="col"><%=staff.phonenumber%></td>
                  <td class="col"><%=staff.role%></td>
                  <td class="col">
                    <button class="btn btn-secondary" onclick="showStaffModal('<%=staff._id%>')">View Details</button>
                  </td>
                </tr>
              <% }) %>
            </tbody>

            <!-- Staff Details Modal -->
            <div
            class="modal fade"
            id="staff-details"
            tabindex="-1"
            aria-labelledby="staff-details-modal"
            aria-hidden="true"
          >
            <div
              class="modal-dialog modal-dialog-centered"
              id="staff-details-modal"
              style="max-width: 1000px !important ; width: 700px !important"
            >
              <div class="modal-content">
                <div class="modal-header">
                  <h1 class="modal-title fs-5" id="staff-details-modal">
                    Staff Details
                  </h1>
                  <button
                    type="button"
                    class="btn-close"
                    data-bs-dismiss="modal"
                    aria-label="Close"
                  ></button>
                </div>
                <form
                  id="staff-form"
                  class="needs-validation"
                  novalidate
                  onsubmit=""
                >
                  <div class="modal-body">
                    <div class="mb-3">
                      <label for="id" class="form-label">ID</label>
                      <input
                        type="text"
                        class="form-control"
                        disabled
                        id="id"
                      />
                    </div>
                    <div class="row mb-3">
                      <div class="col-12 col-md-6">
                        <label for="firstname" class="form-label">First Name</label>
                        <input
                          type="text"
                          class="form-control"
                          required
                          id="firstname"
                        />
                        <div class="invalid-feedback">First Name is required</div>
                      </div>
                      <div class="col-12 col-md-6">
                        <label for="firstname" class="form-label"
                          >Last Name</label
                        >
                        <input
                          type="text"
                          class="form-control"
                          required
                          id="lastname"
                        />
                        <div class="invalid-feedback">Last Name is required</div>
                      </div>
                    </div>
                    <div class="row mb-3">
                      <div class="col-12 col-md-6">
                        <label for="email" class="form-label">Email</label>
                        <input
                          type="text"
                          class="form-control"
                          required
                          id="email"
                        />
                        <div class="invalid-feedback">Email is required</div>
                      </div>
                      <div class="col-12 col-md-6">
                        <label for="phonenumber" class="form-label"
                          >Phone Number</label
                        >
                        <input
                          type="text"
                          class="form-control"
                          required
                          id="phonenumber"
                        />
                        <div class="invalid-feedback">Phonenumber is required</div>
                      </div>
                    </div>
                    <div class="mb-3">
                      <div class="mb-3">
                        <label for="username" class="form-label">Username</label>
                        <input type="text" class="form-control" required id="details-username">
                        <div class="invalid-feedback">Username is required</div>
                      </div>
                      <label for="address" class="form-label"
                        >Address</label
                      >
                      <input
                        type="text"
                        class="form-control"
                        required
                        id="address"
                      />
                      <div class="invalid-feedback">Address is required</div>
                    </div>
                    <div class="mb-3">
                        <label for="bfd" class="form-label">Birthdate</label>
                        <input
                          type="text"
                          class="form-control"
                          required
                          id="bfd"
                        />
                        <div class="invalid-feedback">Birthdate is required</div>
                    </div>
                    <div class="mb-3">
                      <label for="role" class="form-label">Role</label>
                      <select
                        type="text"
                        class="form-control"
                        required
                        id="role"
                      >
                      <option value="front-desk" selected>Front Desk</option>
                      <option value="front-desk">Manager</option>
                    </select>
                      <div class="invalid-feedback">Role is required</div>
                    </div>
                  <div class="modal-footer">
                    <div class="d-flex justify-content-between w-100">
                        <div>
                          <button type="button" class="btn btn-danger" data-bs-dismiss="modal" id="staff-delete">
                            Delete
                          </button>
                        </div>
                        <div>
                          <button
                            type="button"
                            class="btn btn-secondary"
                            data-bs-dismiss="modal"
                          >
                            Close
                          </button>
                          <button type="submit" class="btn btn-primary">
                            Update
                          </button>
                        </div>
                    </div>
                  </div>
                </form>
              </div>
            </div>
            </div>
            <!-- Staff Details Modal -->
          </table>
          <button class="btn btn-primary" data-bs-toggle="modal"
          data-bs-target="#new-staff">New Staff</button>

          <!-- New Staff Modal -->
          <div
          class="modal fade"
          id="new-staff"
          tabindex="-1"
          aria-labelledby="member-details-modal"
          aria-hidden="true"
        >
          <div
            class="modal-dialog modal-dialog-centered"
            id="new-staff-modal"
            style="max-width: 1000px !important ; width: 700px !important"
          >
            <div class="modal-content">
              <div class="modal-header">
                <h1 class="modal-title fs-5" id="member-details-modal">
                  Staff Details
                </h1>
                <button
                  type="button"
                  class="btn-close"
                  data-bs-dismiss="modal"
                  aria-label="Close"
                ></button>
              </div>
              <form
                class="needs-validation"
                novalidate
                onsubmit="return addStaff()"
              >
                <div class="modal-body">
                  <div class="row mb-3">
                    <div class="col-12 col-md-6">
                      <label for="new-firstname" class="form-label">First Name</label>
                      <input
                        type="text"
                        class="form-control"
                        required
                        id="new-firstname"
                      />
                      <div class="invalid-feedback">First Name is required</div>
                    </div>
                    <div class="col-12 col-md-6">
                      <label for="firstname" class="form-label"
                        >Last Name</label
                      >
                      <input
                        type="text"
                        class="form-control"
                        required
                        id="new-lastname"
                      />
                      <div class="invalid-feedback">Last Name is required</div>
                    </div>
                  </div>
                  <div class="row mb-3">
                    <div class="col-12 col-md-6">
                      <label for="new-email" class="form-label">Email</label>
                      <input
                        type="text"
                        class="form-control"
                        required
                        id="new-email"
                      />
                      <div class="invalid-feedback">Email is required</div>
                    </div>
                    <div class="col-12 col-md-6">
                      <label for="new-phonenumber" class="form-label"
                        >Phone Number</label
                      >
                      <input
                        type="text"
                        class="form-control"
                        required
                        id="new-phonenumber"
                      />
                      <div class="invalid-feedback">Phone number is required</div>
                    </div>
                  </div>
                  <div class="mb-3">
                    <label for="username" class="form-label">Username</label>
                    <input type="text" class="form-control" required id="new-username">
                    <div class="invalid-feedback">Username is required</div>
                  </div>
                  <div class="row mb-3">
                    <div class="col-12 col-md-6">
                      <label for="new-password" class="form-label">Password</label>
                      <input
                        type="password"
                        class="form-control"
                        required
                        id="new-password"
                      />
                      <div class="invalid-feedback">Password is required</div>
                    </div>
                    <div class="col-12 col-md-6">
                      <label for="new-confirm-password" class="form-label"
                        >Confirm Password</label
                      >
                      <input
                        type="password"
                        class="form-control"
                        required
                        id="new-confirm-password"
                      />
                      <div class="invalid-feedback">Confirm Password is required</div>
                    </div>
                  </div>
                  <div class="mb-3">
                    <label for="new-address" class="form-label"
                      >Address</label
                    >
                    <input
                      type="text"
                      class="form-control"
                      required
                      id="new-address"
                    />
                    <div class="invalid-feedback">Address is required</div>
                  </div>
                  <div class="mb-3">
                      <label for="new-bfd" class="form-label">Birthdate</label>
                      <input
                        type="text"
                        class="form-control"
                        required
                        id="new-bfd"
                      />
                      <div class="invalid-feedback">Birthdate is required</div>
                  </div>
                  <div class="mb-3">
                    <label for="new-role" class="form-label">Role</label>
                    <select

                      type="text"
                      class="form-control"
                      required
                      id="new-role"
                    >
                    <option value="front-desk" selected>Front Desk</option>
                    <option value="manager">Manager</option>
                  </select>
                    <div class="invalid-feedback">Role is required</div>
                  </div>
                <div class="modal-footer">
                    <button
                      type="button"
                      class="btn btn-secondary"
                      data-bs-dismiss="modal"
                    >
                      Close
                    </button>
                    <button type="submit" class="btn btn-primary">
                      Create
                    </button>
                </div>
              </form>
            </div>
          </div>
          </div>
          <!-- New Staff Modal -->
        </main>
      </div>
    </div>

    <script>
      (() => {
        "use strict";

        // Fetch all the forms we want to apply custom Bootstrap validation styles to
        const forms = document.querySelectorAll(".needs-validation");

        // Loop over them and prevent submission
        Array.from(forms).forEach((form) => {
          form.addEventListener(
            "submit",
            (event) => {
              if (!form.checkValidity()) {
                event.preventDefault();
                event.stopPropagation();
              }

              form.classList.add("was-validated");
            },
            false
          );
        });
      })();

      const addStaff = () => {
        const payload = {
          firstname: document.getElementById("new-firstname").value,
          lastname: document.getElementById("new-lastname").value,
          email: document.getElementById("new-email").value,
          password: document.getElementById("new-password").value,
          confirmPassword: document.getElementById("new-confirm-password").value,
          username: document.getElementById("new-username").value,
          phonenumber: document.getElementById("new-phonenumber").value,
          address: document.getElementById("new-address").value,
          dateOfBirth: new Date(document.getElementById("new-bfd").value),
        };
        fetch("/api/v1/admin/staff/add-employee", {
          method: "POST",
          body: JSON.stringify(payload),
          headers: {
            'Content-Type': 'application/json'
          },
        })
          .then((res) => {
            if (!res || !res.ok || res.status !== 200) {
              throw new Error("Error");
            } else {
              Toastify({
                text: "Staff Created Successfully",
                duration: 3000,
                close: true,
                gravity: "top", // `top` or `bottom`
                position: "center", // `left`, `center` or `right`
                stopOnFocus: false, // Prevents dismissing of toast on hover
                style: {
                  background: "var(--bs-success)",
                },
              }).showToast();
            }
          })
          .catch((err) => {
            Toastify({
              text: "Something went wrong",
              duration: 3000,
              close: true,
              gravity: "top", // `top` or `bottom`
              position: "center", // `left`, `center` or `right`
              stopOnFocus: false,
              style: {
                background: "var(--bs-danger)",
              },
            }).showToast();
            console.log(err);
          });
      
        };
      
      const deleteStaff = (staffId) => {
        const payload = {
          id: staffId,
        }

        fetch(`/api/v1/admin/staff/${staffId}`, {
          method: "DELETE",
          body: JSON.stringify(payload),
          headers: {
            'Content-Type': 'application/json'
          },
        })
          .then((res) => {
            if (!res || !res.ok || res.status !== 200) {
              throw new Error("Error");
            } else {
              Toastify({
                text: "Staff Deleted Successfully",
                duration: 3000,
                close: true,
                gravity: "top", // `top` or `bottom`
                position: "center", // `left`, `center` or `right`
                stopOnFocus: false, // Prevents dismissing of toast on hover
                style: {
                  background: "var(--bs-success)",
                },
              }).showToast();
              window.location.reload();
            }
          })
          .catch((err) => {
            Toastify({
              text: "Something went wrong",
              duration: 3000,
              close: true,
              gravity: "top", // `top` or `bottom`
              position: "center", // `left`, `center` or `right`
              stopOnFocus: false,
              style: {
                background: "var(--bs-danger)",
              },
            }).showToast();
            console.log(err);
          });
      }

      const updateStaff = (staffId) => {
        const id = document.getElementById("id").value = staffId
        const firstname = document.getElementById("firstname").value;
        const lastname = document.getElementById("lastname").value;
        const email = document.getElementById("email").value;
        const phonenumber = document.getElementById("phonenumber").value;
        const username = document.getElementById("details-username").value;
        const address = document.getElementById("address").value;
        const bfd = document.getElementById("bfd").value;
        const role = document.getElementById("role").value;

        const payload = {
          _id:id,
          firstname,
          lastname,
          username,
          email,
          phonenumber,
          address,
          bfd,
          role,
        }
        fetch(`/api/v1/admin/staff/${staffId}`, {
          method: "PUT",
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(payload),
        })
          .then((res) => {
            if (!res || !res.ok || res.status !== 200) {
              throw new Error("Error");
            } else {
              Toastify({
                text: "Staff Updated Successfully",
                duration: 3000,
                close: true,
                gravity: "top", // `top` or `bottom`
                position: "center", // `left`, `center` or `right`
                stopOnFocus: false, // Prevents dismissing of toast on hover
                style: {
                  background: "var(--bs-success)",
                },
              }).showToast();
            }
          })
          .catch((err) => {
            Toastify({
              text: "Something went wrong",
              duration: 3000,
              close: true,
              gravity: "top", // `top` or `bottom`
              position: "center", // `left`, `center` or `right`
              stopOnFocus: false,
              style: {
                background: "var(--bs-danger)",
              },
            }).showToast();
            console.log(err);
          });
      
      }

      const showStaffModal = (staffId) => {
        fetch(`/api/v1/admin/staff/${staffId}`)
        .then(res => res.json())
        .then(body => body.data)
        .then(data => {
          const staffDetailsModal = new bootstrap.Modal(document.getElementById('staff-details'), {})
          staffDetailsModal.show();
          document.getElementById("staff-form").setAttribute('onsubmit', `return updateStaff("${staffId}")`)
          document.getElementById("staff-delete").setAttribute('onclick', `deleteStaff("${staffId}")`)
          document.getElementById("id").value = data._id
          document.getElementById("firstname").value = data.firstname
          document.getElementById("lastname").value = data.lastname
          document.getElementById("email").value = data.email
          document.getElementById("phonenumber").value = data.phonenumber
          document.getElementById("details-username").value = data.username
          document.getElementById("address").value = data.address
          const bfd = new Date(data.dateOfBirth);
          console.log(bfd);
          document.getElementById("bfd").value = `${bfd.getDay()+1}-${bfd.getMonth()+1}-${bfd.getFullYear()}`
          document.getElementById("role").value = data.role
        })
        .catch((err) => {
          Toastify({
            text: "Something went wrong",
            duration: 3000,
            close: true,
            gravity: "top", // `top` or `bottom`
            position: "center", // `left`, `center` or `right`
            stopOnFocus: false,
            style: {
              background: "var(--bs-danger)",
            },
          }).showToast();
          console.log(err);
        });
      }
    </script>
  </body>
</html>